name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        system:
          - aarch64-linux-gnu
          - aarch64-linux-musl
          - arm-linux-gnueabi
          - arm-linux-gnueabihf
          - arm-linux-musleabi
          - arm-linux-musleabihf
          - loongarch64-linux-gnu
          - mipsel-linux-musleabi
          - riscv64-linux-gnu
          - riscv64-linux-musl
          - x86-linux-gnu
          - x86-linux-musl
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Meson
        run: pip install --user meson

      - name: Setup Zig Compiler
        uses: mlugg/setup-zig@v2.0.5

      - name: Install Dependencies
        run: sudo apt update && sudo apt install -y build-essential pkg-config wget tar ninja-build

      - name: Download and build libpcap
        run: |
          wget https://www.tcpdump.org/release/libpcap-1.10.5.tar.gz
          tar xf libpcap-1.10.5.tar.gz
          cd libpcap-1.10.5
          CC="zig cc -target ${{ matrix.system }}" \
          AR="zig ar" \
          RANLIB="zig ranlib" \
          ./configure --host=x86_64-linux --with-pcap=linux --prefix=$(pwd)
          make -j$(nproc)
          make install

      - name: Build for ${{ matrix.system }}
        run: |
          export PKG_CONFIG_LIBDIR=$(pwd)/libpcap-1.10.5/lib/pkgconfig
          meson setup build-${{ matrix.system }} --cross-file cross/${{ matrix.system }}.toml
          cd build-${{ matrix.system }}
          meson compile

      - name: Prepare artifacts
        run: |
          mkdir -p dist
          cp build-${{ matrix.system }}/zzz dist/zzz-${{ matrix.system }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zzz-${{ matrix.system }}
          path: dist/zzz-${{ matrix.system }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
